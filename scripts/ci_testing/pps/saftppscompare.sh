#!/bin/bash
set -e
#This script is used to calculate the time difference between the PPS signals generated by 
#network switch and the timing receivers

#Sourcing the configuration file available in the current working directory
source ./saftppsconfig.sh

#Erasing lines from the log file that are not required for time difference calculation
#Erasing all the lines from the log file having Falling as a string. Time difference
#is calculated for all the rising edges of the clock and hence falling edge data is not required
sed '/Falling/d' $dev1_log > $dev1temp1

#Erasing lines from the log data having Edge and -- in it
sed '/Edge/d' $dev1temp1 > $dev1temp2
sed '/--/d' $dev1temp2 > $dev1_log

#Deleting the temporary files
rm $dev1temp1 $dev1temp2

#Storing the values of IO ports to an array variable
port=( $(awk '{print $1}' $dev1_log) )

#Storing the hexadecimal values of PPS time to an array variable
var=( $(awk '{print $6}' $dev1_log) )

#variable n defines the length of the array "var"
n=${#var[@]}

#Initial value for variables
i=0
k=0
j=0

#Temporary files to store intermediate results. These files are deleted after the test is complete.
temp_file=./check.txt
temp_file1=./check1.txt

#Calculating time difference between network switch and timing receivers
#The timing receivers refer to the PPS time stamp value from network switch
#Currently, the difference is calculated between Pexarria (IO2) and network switch (IO1) and
#SCU3 (IO3) and network switch (IO1) 

for (( i=0; i<$n; i++ ))
do
	if [ "${port[i]}" == $ref1 ]; then
		j="$(($i-1))"
		for (( j="$(($i-1))"; j>0; j-- ))
		do
			if [ "${port[j]}" == $ref1 ]; then
				j=0
			else
				difference=$(( ${var[i]} - ${var[j]}))
				num=$((10#$difference))
				newnum+=( $num )
				echo "${var[i]} ${port[i]} ---- ${var[j]} ${port[j]} Diff= $num ns" >> $temp_file
			fi
		done
	fi
done

#Retaining all the difference values less than 1500 ns.
#Other values are discarded
cat $temp_file | awk ' $7 <= 1500 ' > $temp_file1

#Referring to the IO ports to get the device name
port1=( $(awk '{print $2}' $temp_file1) )
port2=( $(awk '{print $5}' $temp_file1) )

#Referring to the hexadecimal time value of PPS signal generation
timediff1=( $(awk '{print $1}' $temp_file1) )
timediff2=( $(awk '{print $4}' $temp_file1) )

#Referring to the time difference value
value=( $(awk '{print $7}' $temp_file1) )

#Length of the array
m=${#value[@]}

#Initial value for variables
a=0
b=0
c=${#ref[@]}
#Loop to get the device name by checking the respective port name.
#The loop will get the device name from the array of device names.
#The order should be same as the port order. Refer saftppsconfig file
for (( a=0; a<$m; a++ ))
do
	for (( b=0; b<$c; b++ ))
	do
		if [ "${port1[a]}" == "${ref[b]}" ]; then
        		printf "${dev[b]} vs "
	                for (( b=0; b<$c; b++ ))
        	        do
                		if [ "${port2[a]}" == "${ref[b]}" ]; then
                        		printf "${dev[b]} "
	                        fi
        	        done
	        fi
	done
	echo -e "\e[93m${timediff1[a]} ${port1[a]} ---- ${timediff2[a]} ${port2[a]} Diff= ${value[a]} ns"
done

#Initial value for variables
l=0
p=0

#Loop to check if the any time difference value is greater than 200ns
for (( l=0; l<=$m; l++ ))
do
	if [[ ${value[l]} -ge $maxdiff ]]; then
		p="$(($p+1))"
	fi
done

#Remove the temporary files after all the operation is complete 
rm $dev1_log
rm $temp_file
rm $temp_file1

#If a value greater than 200ns exists, then send an error email to the recipients
#mentioned in the saftppsconfig file
if [[ $p -gt 0 ]]; then
	temp_count=1
else
	temp_count=0
fi

export temp_count
